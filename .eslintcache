[{"/Users/davidanderson/Desktop/chategories/src/index.js":"1","/Users/davidanderson/Desktop/chategories/src/App.js":"2","/Users/davidanderson/Desktop/chategories/src/reportWebVitals.js":"3","/Users/davidanderson/Desktop/chategories/src/PrivateRoute.js":"4","/Users/davidanderson/Desktop/chategories/src/Auth.js":"5","/Users/davidanderson/Desktop/chategories/src/firebase.js":"6","/Users/davidanderson/Desktop/chategories/src/components/Footer/Footer.js":"7","/Users/davidanderson/Desktop/chategories/src/pages/NoMatch/NoMatch.js":"8","/Users/davidanderson/Desktop/chategories/src/components/Nav/Nav.js":"9","/Users/davidanderson/Desktop/chategories/src/pages/Home/Home.js":"10","/Users/davidanderson/Desktop/chategories/src/pages/SignIn/SignIn.js":"11","/Users/davidanderson/Desktop/chategories/src/pages/Settings/Settings.js":"12","/Users/davidanderson/Desktop/chategories/src/pages/Search/Search.js":"13","/Users/davidanderson/Desktop/chategories/src/pages/SelectedChategory/SelectedChategory.js":"14","/Users/davidanderson/Desktop/chategories/src/pages/Chat/Chat.js":"15","/Users/davidanderson/Desktop/chategories/src/pages/MyChats/MyChats.js":"16","/Users/davidanderson/Desktop/chategories/src/useDebounce.js":"17","/Users/davidanderson/Desktop/chategories/src/components/Switch/Switch.js":"18","/Users/davidanderson/Desktop/chategories/src/components/MyChategories/MyChategories.js":"19","/Users/davidanderson/Desktop/chategories/src/components/MyPosts/MyPosts.js":"20","/Users/davidanderson/Desktop/chategories/src/components/SetBio/SetBio.js":"21","/Users/davidanderson/Desktop/chategories/src/components/AddNewChategory/AddNewChategory.js":"22","/Users/davidanderson/Desktop/chategories/src/components/SetUserName/SetUserName.js":"23","/Users/davidanderson/Desktop/chategories/src/components/NewestChategories/NewestChategories.js":"24","/Users/davidanderson/Desktop/chategories/src/components/SearchResults/SearchResults.js":"25","/Users/davidanderson/Desktop/chategories/src/components/ChategoryTopicsList/ChategoryTopicsList.js":"26","/Users/davidanderson/Desktop/chategories/src/components/ChategoryNameCard/ChategoryNameCard.js":"27","/Users/davidanderson/Desktop/chategories/src/components/AddNewTopic/AddNewTopic.js":"28","/Users/davidanderson/Desktop/chategories/src/components/MyUserNameCard/MyUserNameCard.js":"29","/Users/davidanderson/Desktop/chategories/src/components/MyChatsDiv/MyChatsDiv.js":"30","/Users/davidanderson/Desktop/chategories/src/pages/OtherUserProfile/OtherUserProfile.js":"31","/Users/davidanderson/Desktop/chategories/src/components/OtherUserChategories/OtherUserChategories.js":"32","/Users/davidanderson/Desktop/chategories/src/components/OtherUserAboutMe/OtherUserAboutMe.js":"33","/Users/davidanderson/Desktop/chategories/src/components/OtherUserMyPosts/OtherUserMyPosts.js":"34","/Users/davidanderson/Desktop/chategories/src/components/OtherUserNameCard/OtherUserNameCard.js":"35"},{"size":547,"mtime":1607357448002,"results":"36","hashOfConfig":"37"},{"size":2022,"mtime":1607481500120,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1607357448006,"results":"39","hashOfConfig":"37"},{"size":492,"mtime":1607393016254,"results":"40","hashOfConfig":"37"},{"size":611,"mtime":1607393016254,"results":"41","hashOfConfig":"37"},{"size":437,"mtime":1607393016257,"results":"42","hashOfConfig":"37"},{"size":1671,"mtime":1607365170442,"results":"43","hashOfConfig":"37"},{"size":131,"mtime":1607357448004,"results":"44","hashOfConfig":"37"},{"size":2513,"mtime":1607488626851,"results":"45","hashOfConfig":"37"},{"size":1335,"mtime":1607376268128,"results":"46","hashOfConfig":"37"},{"size":844,"mtime":1607407027919,"results":"47","hashOfConfig":"37"},{"size":2752,"mtime":1607488626870,"results":"48","hashOfConfig":"37"},{"size":4055,"mtime":1607488626869,"results":"49","hashOfConfig":"37"},{"size":2284,"mtime":1607402134215,"results":"50","hashOfConfig":"37"},{"size":2505,"mtime":1607488626860,"results":"51","hashOfConfig":"37"},{"size":387,"mtime":1607488626860,"results":"52","hashOfConfig":"37"},{"size":521,"mtime":1607357448007,"results":"53","hashOfConfig":"37"},{"size":810,"mtime":1607397350485,"results":"54","hashOfConfig":"37"},{"size":1959,"mtime":1607488626842,"results":"55","hashOfConfig":"37"},{"size":1574,"mtime":1607488626844,"results":"56","hashOfConfig":"37"},{"size":1536,"mtime":1607488626856,"results":"57","hashOfConfig":"37"},{"size":2155,"mtime":1607396518284,"results":"58","hashOfConfig":"37"},{"size":2160,"mtime":1607396794482,"results":"59","hashOfConfig":"37"},{"size":1585,"mtime":1607398213465,"results":"60","hashOfConfig":"37"},{"size":654,"mtime":1607357448000,"results":"61","hashOfConfig":"37"},{"size":1531,"mtime":1607450251986,"results":"62","hashOfConfig":"37"},{"size":841,"mtime":1607488626838,"results":"63","hashOfConfig":"37"},{"size":1750,"mtime":1607450251984,"results":"64","hashOfConfig":"37"},{"size":1919,"mtime":1607488626844,"results":"65","hashOfConfig":"37"},{"size":1720,"mtime":1607481264861,"results":"66","hashOfConfig":"37"},{"size":1744,"mtime":1607488626862,"results":"67","hashOfConfig":"37"},{"size":1807,"mtime":1607456491358,"results":"68","hashOfConfig":"37"},{"size":1105,"mtime":1607456491354,"results":"69","hashOfConfig":"37"},{"size":1368,"mtime":1607456491360,"results":"70","hashOfConfig":"37"},{"size":2750,"mtime":1607488626854,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"46jn5m",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"97"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"97"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"97"},"/Users/davidanderson/Desktop/chategories/src/index.js",[],"/Users/davidanderson/Desktop/chategories/src/App.js",[],"/Users/davidanderson/Desktop/chategories/src/reportWebVitals.js",[],"/Users/davidanderson/Desktop/chategories/src/PrivateRoute.js",[],"/Users/davidanderson/Desktop/chategories/src/Auth.js",[],"/Users/davidanderson/Desktop/chategories/src/firebase.js",[],"/Users/davidanderson/Desktop/chategories/src/components/Footer/Footer.js",["150"],"/Users/davidanderson/Desktop/chategories/src/pages/NoMatch/NoMatch.js",[],"/Users/davidanderson/Desktop/chategories/src/components/Nav/Nav.js",[],"/Users/davidanderson/Desktop/chategories/src/pages/Home/Home.js",[],"/Users/davidanderson/Desktop/chategories/src/pages/SignIn/SignIn.js",[],"/Users/davidanderson/Desktop/chategories/src/pages/Settings/Settings.js",["151"],"import React from 'react';\nimport { Container, Button } from '@material-ui/core';\nimport MyUserNameCard from '../../components/MyUserNameCard/MyUserNameCard';\nimport firebase from \"firebase\";\nimport SetBio from '../../components/SetBio/SetBio';\nimport SetUserName from '../../components/SetUserName/SetUserName';\nimport MyChategories from '../../components/MyChategories/MyChategories';\nimport \"./Settings.css\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction Settings() {\n    let { uid, displayName } = auth.currentUser;\n\n    const usersRef = firestore.collection('users');\n    const query = usersRef.where('uid', '==', uid).limit(1)\n    const [users] = useCollectionData(query, { idField: 'id' });\n    const [modal, setShow] = React.useState(false);\n    const [modalShow, setModalShow] = React.useState(false);\n\n    return (\n            <div className=\"TopBottomMargin\">\n                <h5 className='SettingsProfile' > ~ Edit My Profile ~ </h5>\n                <Container className='SettingsProfile'>\n                    <MyUserNameCard />\n\n                    {/* <Button onClick={() => setShow(true)}>Edit Display Name/Picture</Button> */}\n                    <br/>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => setShow(true)}>Edit Display Name/Picture</Button>\n\n                    <SetUserName show={modal} onHide={() => setShow(false)} />\n                    <div className=\"ContentArea\">\n                        <div className=\"ContentArea\">\n                            \n                            <br/>\n                            <h5>About Me:</h5>\n\n                            <Container className=\"bioContainer\" maxWidth=\"sm\">\n                                <div className=\"bioBox\">\n                                    {users && users.map(user => <Bio key={user.id} message={user} />)}\n                                </div>\n                            </Container>\n\n                            {/* <Button onClick={() => setModalShow(true)}>Edit About Me</Button> */}\n\n                            <br/>\n                            <Button variant=\"outlined\" color=\"secondary\" onClick={() => setModalShow(true)}>Edit About Me</Button>\n\n                            <SetBio show={modalShow} onHide={() => setModalShow(false)} />\n                        </div>\n                        \n                    </div>\n\n                    <br/>\n                    <h5>My Chategories</h5>\n                    <MyChategories />\n                </Container>\n            </div>\n    )\n}\n\nfunction Bio(props) {\n    const {bio} = props.message;\n    return(\n      <div>{bio}</div>\n    )\n  }\n\nexport default Settings;",["152","153"],"/Users/davidanderson/Desktop/chategories/src/pages/Search/Search.js",["154","155"],"import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { red, blue, grey } from \"@material-ui/core/colors\"\nimport React, { useState } from 'react';\nimport { Container, TextField, Switch, Button } from '@material-ui/core';\nimport AddNewChategory from '../../components/AddNewChategory/AddNewChategory';\nimport NewestChategories from '../../components/NewestChategories/NewestChategories';\nimport SearchResults from '../../components/SearchResults/SearchResults';\nimport useDebounce from \"../../useDebounce\"\nimport \"./Search.css\";\nimport firebase from \"firebase\"\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { Link } from \"react-router-dom\"\nconst firestore = firebase.firestore();\nfunction Search() {\n\n    const [toggleState, setToggleState] = useState(false);\n    const [search, setSearch] = useState(\"\");\n    const [modalShow, setModalShow] = React.useState(false);\n\n    const ColorSwitch = withStyles({\n        switchBase: {\n          color: red[500],\n          '&$checked': {\n            color: blue[500],\n          },\n          '&$checked + $track': {\n            backgroundColor: grey[700],\n          },\n        },\n        checked: {},\n        track: {},\n      })(Switch);\n\n    const handleInputChange = event => {\n        setSearch(event.target.value);\n    };\n    const onSearchFieldClick = (event) => {\n        setToggleState(true);\n    }\n    const debouncedSearchTerm = useDebounce(search, 500);\n    const usersRef = firestore.collection('chategories');\n    const query = usersRef.where(\"title\", \"==\", debouncedSearchTerm).limit(25);\n    const [chategories] = useCollectionData(query, { idField: 'id' });\n\n    console.log(chategories)\n\n    // const CssTextField = withStyles({\n    //     root: {\n    //         '& .MuiOutlinedInput-root': {\n    //         '&.Mui-focused fieldset': {\n    //           borderColor: 'black',\n    //         },\n    //       },\n    //     },\n    //   })(TextField);\n\n    return (\n\n        <div className=\"TopBottomMargin\">\n\n            <div className=\"container MuiContainer-maxWidthSm\">\n\n                <div className=\"row\">\n\n                    <div className=\"col TextFieldPadding\">\n\n                        <TextField fullWidth=\"true\" label=\"Search\" variant=\"outlined\" onClick={() => onSearchFieldClick()} onChange={handleInputChange} /><br />\n\n                    </div>\n\n                </div>\n\n            </div>\n\n\n            <div className=\"container\">\n\n                <div className=\"row\">\n\n                    <div className=\"col AlignCenter\">\n\n                        {<h6>New Chategories</h6>} <ColorSwitch checked={toggleState} onChange={() => setToggleState(!toggleState)} /> {<h6>Search Results</h6>}\n\n                        <div>{toggleState ? <div className=\"ContentArea\">\n                        <Container className=\"SearchResults\" maxWidth=\"sm\">\n                        <div className=\"container\">{chategories && chategories.map(chategory =>\n                        <Chategory key={chategory.id} message={chategory} />)}\n                        </div>\n                        </Container>\n                        </div> :\n                        <NewestChategories />}\n                        </div>\n\n                        <Button className='SearchBtn'variant=\"contained\" color=\"secondary\" onClick={() => setModalShow(true)}>Add a NEW Chategory</Button>\n\n                        <AddNewChategory show={modalShow} onHide={() => setModalShow(false)} />\n\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }));\n\nfunction Chategory(props) {\n    const classes = useStyles();\n    const { title } = props.message;\n    return (<>\n        <div className={classes.root}>\n            {/* <Link to={'/topic/' + title}>{title}</Link> */}\n            <Button variant=\"outlined\" color=\"secondary\" href={'/topic/' + title}>{ title }</Button>\n        </div>\n    </>)\n}\n\nexport default Search;","/Users/davidanderson/Desktop/chategories/src/pages/SelectedChategory/SelectedChategory.js",[],"/Users/davidanderson/Desktop/chategories/src/pages/Chat/Chat.js",["156"],"import React, { useRef, useState } from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport firebase from \"../../firebase\"\nimport { useParams } from 'react-router-dom'\nimport { Link } from \"react-router-dom\"\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport \"./Chat.css\";\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nfunction Chat() {\n  let { id } = useParams();\n  const dummy = useRef();\n  const messagesRef = firestore.collection(id);\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, { idField: 'id' });\n  const [formValue, setFormValue] = useState('');\n\n\n  const usersRef = firestore.collection('users');\n  const { uid } = auth.currentUser;\n  const query2 = usersRef.where('uid', '==', uid).limit(1)\n\n  const [users] = useCollectionData(query2, { idField: 'id' });\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    const { uid } = auth.currentUser;\n    const photoURL = users[0].photoURL\n    const displayName = users[0].displayName\n\n    // const {displayName} = [users.[0]]\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      displayName\n    })\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n<br/>\n    <div className=\"ContentArea\">\n\n      <Container className=\"MyChategories\" maxWidth=\"sm\">\n        <div className=\"container\">\n\n          {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n        </div>\n      </Container>\n\n\n      {/* <span ref={dummy}></span> */}\n\n      <Container className=\"FormDiv\" maxWidth=\"sm\">\n\n          <form onSubmit={sendMessage}>\n            <input value={formValue} fullWidth=\"true\" onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n            <button type=\"submit\" disabled={!formValue}>🕊️</button>\n          </form>\n\n      </Container>\n\n    </div>\n\n  </>)\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL, displayName } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <Link to={'/otherprof/' + uid}>\n        <img className=\"chatImg\" src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n      </Link>\n\n      <p>{text}</p>\n    </div>\n  </>)\n}\n\nexport default Chat;","/Users/davidanderson/Desktop/chategories/src/pages/MyChats/MyChats.js",[],"/Users/davidanderson/Desktop/chategories/src/useDebounce.js",[],"/Users/davidanderson/Desktop/chategories/src/components/Switch/Switch.js",[],"/Users/davidanderson/Desktop/chategories/src/components/MyChategories/MyChategories.js",["157","158","159"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Button } from '@material-ui/core';\nimport firebase from \"firebase\"\nimport \"./MyChategories.css\";\nimport 'firebase/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { Link } from \"react-router-dom\"\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\n\nfunction MyChategories() {\n\n  const classes = useStyles();\n  const navStyle = {\n    color: 'white'\n  };\n  const { uid } = auth.currentUser;\n  const usersRef = firestore.collection('chategories');\n  const query = usersRef.where(\"savedusers\", 'array-contains', uid).limit(25);\n  const [chategories] = useCollectionData(query, { idField: 'id' });\n\n  return (\n\n    <div className=\"ContentArea\">\n      <Container className=\"MyChategories\" maxWidth=\"sm\">\n        <div className=\"container\">\n\n          {chategories && chategories.map(chategory => <Chategory key={chategory.id} message={chategory} />)}\n        </div>\n      </Container>\n    </div>\n  )\n}\nfunction Chategory(props) {\n  const { title } = props.message;\n  const {uid} = auth.currentUser;\n\n  const onButtonClick = () => {\n    const chategoriesRef = firestore.collection(\"chategories\").doc(title);\n    // const [chategories] = useCollectionData(query, {idfield: 'id'})\n    chategoriesRef.update({\n      savedusers: firebase.firestore.FieldValue.arrayRemove(uid)\n    }).then(() => {\n      console.log(chategoriesRef);\n    }).catch((error) => {\n      console.log(error)\n    })\n  }\n\n  return (<>\n    <div>\n    {/* <Link to={'/topic/' + title}>{title}</Link> */}\n\n    <Button variant=\"outlined\" color=\"primary\" href={'/topic/' + title}>{title}</Button>\n    \n    <Button variant=\"outlined\" color=\"secondary\" onClick={onButtonClick}>X</Button>\n\n   </div>\n  </>)\n}\n\nexport default MyChategories;","/Users/davidanderson/Desktop/chategories/src/components/MyPosts/MyPosts.js",["160","161","162"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Container } from '@material-ui/core';\nimport firebase from \"firebase\"\nimport 'firebase/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport \"./MyPosts.css\";\nimport {Link} from 'react-router-dom';\nimport green from \"@material-ui/core/colors/green\";\n\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n      flexGrow: 1,\n    },\n    postsStyle: {\n      color: green[500]\n    }\n  }));\n\nfunction MyPosts() {\n    const classes = useStyles();\n    const navStyle = {\n        color: 'white'\n    };\n    const{uid} = auth.currentUser;\n    const topicsRef = firestore.collection('topics');\n    const query = topicsRef.where('author', '==', uid).limit(25);\n    const [topics] = useCollectionData(query, { idField: 'id' });\n   \n\n    return (\n        <div className= \"ContentArea\">\n        <Container className=\"MyPosts\" maxWidth=\"sm\">\n            <div className=\"container\">\n            {topics && topics.map(topic => <Topics key={topic.id} message={topic}  />)} \n                </div>\n        </Container>\n        </div>\n    )\n}\nfunction Topics(props) {\n  const classes = useStyles();\n  const { title, id } = props.message;\nreturn (<>\n    <div>\n    {/* <Link to={'/chat/' + id}>{title}</Link> */}\n    <Button variant=\"outlined\" className={classes.postsStyle} href={'/chat/' + id}>{title}</Button>\n\n   </div>\n  </>)\n}\n\n\nexport default MyPosts;","/Users/davidanderson/Desktop/chategories/src/components/SetBio/SetBio.js",[],"/Users/davidanderson/Desktop/chategories/src/components/AddNewChategory/AddNewChategory.js",[],"/Users/davidanderson/Desktop/chategories/src/components/SetUserName/SetUserName.js",[],"/Users/davidanderson/Desktop/chategories/src/components/NewestChategories/NewestChategories.js",["163","164","165"],"/Users/davidanderson/Desktop/chategories/src/components/SearchResults/SearchResults.js",["166","167"],"/Users/davidanderson/Desktop/chategories/src/components/ChategoryTopicsList/ChategoryTopicsList.js",["168","169","170"],"/Users/davidanderson/Desktop/chategories/src/components/ChategoryNameCard/ChategoryNameCard.js",["171","172"],"import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\n\nimport \"./ChategoryNameCard.css\";\nimport {useParams} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\nfunction ChategoryNameCard() {\n    const classes = useStyles();\n\n    const navStyle = {\n        color: 'white'\n    };\n    let {id} = useParams();\n    return (\n        <div className= \"ContentArea\">\n        <Container className=\"ChategoryNameCard\" maxWidth=\"sm\">\n            <div className=\"container\">\n              <div className=\"row\">\n                  <div className=\"col text-center ChategoryNamePlate\"><h3>{id}</h3></div>\n              </div>\n            </div>\n        </Container>\n        </div>\n    )\n}\n\nexport default ChategoryNameCard;","/Users/davidanderson/Desktop/chategories/src/components/AddNewTopic/AddNewTopic.js",[],"/Users/davidanderson/Desktop/chategories/src/components/MyUserNameCard/MyUserNameCard.js",[],"/Users/davidanderson/Desktop/chategories/src/components/MyChatsDiv/MyChatsDiv.js",["173","174"],"/Users/davidanderson/Desktop/chategories/src/pages/OtherUserProfile/OtherUserProfile.js",["175"],"/Users/davidanderson/Desktop/chategories/src/components/OtherUserChategories/OtherUserChategories.js",["176","177"],"/Users/davidanderson/Desktop/chategories/src/components/OtherUserAboutMe/OtherUserAboutMe.js",[],"/Users/davidanderson/Desktop/chategories/src/components/OtherUserMyPosts/OtherUserMyPosts.js",["178"],"/Users/davidanderson/Desktop/chategories/src/components/OtherUserNameCard/OtherUserNameCard.js",["179","180"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, IconButton, makeStyles } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport firebase from \"../../firebase\";\nimport { useParams } from 'react-router-dom'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\nimport \"./OtherUserNameCard.css\";\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction OtherUserNameCard() {\n  const classes = useStyles();\n\n  const navStyle = {\n    color: 'white'\n  };\n\n  let { uid } = useParams();\n  const sender = auth.currentUser.uid\n  const chatters = [uid, sender]\n  const sorted = chatters.sort().toString()\n  console.log(sorted)\n \n  const usersRef = firestore.collection('users');\n  const query = usersRef.where('uid', '==', uid).limit(1)\n  const query2 = usersRef.where('uid', '==', sender);\n  const [authUsers] = useCollectionData(query2, { idField: 'id' });\n  console.log(authUsers)\n  const [users] = useCollectionData(query, { idField: 'id' });\n  console.log(users)\n\n  const dmsRef = firestore.collection('dms')\n\n  const addDM = async(e) => {\n    console.log(\"creatingdm\");\n    \n    await dmsRef.doc(sorted).set({\n      users: [uid, sender],\n      title: sorted,\n      photo1: authUsers[0].photoURL,\n      photo2: users[0].photoURL,\n      displayName1: authUsers[0].displayName,\n      displayName2: users[0].displayName\n    })\n  }\n\n\n  return (\n    <div className=\"ContentArea\">\n\n      <Container className=\"OtherUserNameCard\" maxWidth=\"sm\">\n\n        <div className=\"container\">\n\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"OtherUserImage\">\n                {users && users.map(user => <OtherUser key={user.id} message={user} />)}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"ChatIcon\">\n              <Link to={'/chat/' + sorted}>\n                <IconButton color=\"inherit\" className={classes.centerButton} onClick={addDM}>\n                    <SendIcon fontSize=\"large\" />\n                  </IconButton>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nfunction OtherUser(props) {\n  // const displayName = props.messsage.displayName\n  const displayName = props.message.displayName\n  const photoURL = props.message.photoURL\n  return (\n    <>\n      <img src={photoURL}></img>\n      <div className=\"col OtherUserNamePlate\"><h2>{displayName}</h2></div>\n    </>\n  )\n}\n\nexport default OtherUserNameCard;",{"ruleId":"181","severity":1,"message":"182","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":18},{"ruleId":"181","severity":1,"message":"185","line":15,"column":16,"nodeType":"183","messageId":"184","endLine":15,"endColumn":27},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"181","severity":1,"message":"190","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":21},{"ruleId":"181","severity":1,"message":"191","line":12,"column":10,"nodeType":"183","messageId":"184","endLine":12,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":61,"column":9,"nodeType":"194","endLine":61,"endColumn":110},{"ruleId":"181","severity":1,"message":"191","line":8,"column":10,"nodeType":"183","messageId":"184","endLine":8,"endColumn":14},{"ruleId":"181","severity":1,"message":"195","line":24,"column":9,"nodeType":"183","messageId":"184","endLine":24,"endColumn":16},{"ruleId":"181","severity":1,"message":"196","line":25,"column":9,"nodeType":"183","messageId":"184","endLine":25,"endColumn":17},{"ruleId":"181","severity":1,"message":"191","line":8,"column":9,"nodeType":"183","messageId":"184","endLine":8,"endColumn":13},{"ruleId":"181","severity":1,"message":"195","line":23,"column":11,"nodeType":"183","messageId":"184","endLine":23,"endColumn":18},{"ruleId":"181","severity":1,"message":"196","line":24,"column":11,"nodeType":"183","messageId":"184","endLine":24,"endColumn":19},{"ruleId":"181","severity":1,"message":"191","line":4,"column":9,"nodeType":"183","messageId":"184","endLine":4,"endColumn":13},{"ruleId":"181","severity":1,"message":"195","line":21,"column":11,"nodeType":"183","messageId":"184","endLine":21,"endColumn":18},{"ruleId":"181","severity":1,"message":"196","line":23,"column":11,"nodeType":"183","messageId":"184","endLine":23,"endColumn":19},{"ruleId":"181","severity":1,"message":"195","line":18,"column":11,"nodeType":"183","messageId":"184","endLine":18,"endColumn":18},{"ruleId":"181","severity":1,"message":"196","line":20,"column":11,"nodeType":"183","messageId":"184","endLine":20,"endColumn":19},{"ruleId":"181","severity":1,"message":"191","line":8,"column":9,"nodeType":"183","messageId":"184","endLine":8,"endColumn":13},{"ruleId":"181","severity":1,"message":"195","line":23,"column":11,"nodeType":"183","messageId":"184","endLine":23,"endColumn":18},{"ruleId":"181","severity":1,"message":"196","line":25,"column":11,"nodeType":"183","messageId":"184","endLine":25,"endColumn":19},{"ruleId":"181","severity":1,"message":"195","line":18,"column":11,"nodeType":"183","messageId":"184","endLine":18,"endColumn":18},{"ruleId":"181","severity":1,"message":"196","line":20,"column":11,"nodeType":"183","messageId":"184","endLine":20,"endColumn":19},{"ruleId":"181","severity":1,"message":"195","line":21,"column":9,"nodeType":"183","messageId":"184","endLine":21,"endColumn":16},{"ruleId":"181","severity":1,"message":"196","line":23,"column":9,"nodeType":"183","messageId":"184","endLine":23,"endColumn":17},{"ruleId":"181","severity":1,"message":"191","line":6,"column":9,"nodeType":"183","messageId":"184","endLine":6,"endColumn":13},{"ruleId":"181","severity":1,"message":"191","line":5,"column":10,"nodeType":"183","messageId":"184","endLine":5,"endColumn":14},{"ruleId":"181","severity":1,"message":"197","line":36,"column":11,"nodeType":"183","messageId":"184","endLine":36,"endColumn":24},{"ruleId":"181","severity":1,"message":"191","line":5,"column":9,"nodeType":"183","messageId":"184","endLine":5,"endColumn":13},{"ruleId":"181","severity":1,"message":"196","line":23,"column":9,"nodeType":"183","messageId":"184","endLine":23,"endColumn":17},{"ruleId":"192","severity":1,"message":"193","line":82,"column":7,"nodeType":"194","endLine":82,"endColumn":27},"no-unused-vars","'SearchIcon' is defined but never used.","Identifier","unusedVar","'displayName' is assigned a value but never used.","no-native-reassign",["198"],"no-negated-in-lhs",["199"],"'SearchResults' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'classes' is assigned a value but never used.","'navStyle' is assigned a value but never used.","'onButtonClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]